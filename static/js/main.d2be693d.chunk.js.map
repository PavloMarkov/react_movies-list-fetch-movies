{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","props","onClickAdd","useState","quary","setQuary","setMovie","isLoading","setIsLoading","canFind","setCanFind","onSubmit","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","response","data","recievedMovie","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","length","onClick","App","setMovies","addMovieToList","useCallback","every","film","list","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2be693d.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl !== 'N/A'\n            ? movie.imgUrl\n            : 'https://via.placeholder.com/360x270.png?text=no%20preview'}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard/MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  onClickAdd: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { onClickAdd } = props;\n\n  const [quary, setQuary] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [canFind, setCanFind] = useState(false);\n\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n    setIsLoading(true);\n    getMovie(quary)\n      .then((response) => {\n        const data = response;\n\n        if ('Error' in data) {\n          setMovie(null);\n          setCanFind(true);\n        } else {\n          const recievedMovie: Movie = {\n            title: data.Title,\n            description: data.Plot,\n            imgUrl: data.Poster,\n            imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n            imdbId: data.imdbID,\n          };\n\n          setMovie(recievedMovie);\n        }\n      })\n      .catch(() => {\n        setMovie(null);\n        setCanFind(true);\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const handlerAddingMovie = (): void => {\n    if (movie) {\n      onClickAdd(movie);\n      setQuary('');\n      setMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={quary}\n              onChange={(event) => {\n                setQuary(event.target.value);\n                setCanFind(false);\n              }}\n            />\n          </div>\n\n          {canFind && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={quary.length === 0}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handlerAddingMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div\n          className=\"container\"\n          data-cy=\"previewContainer\"\n        >\n          <h2 className=\"title\">\n            Preview\n          </h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=4fb566b8';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovieToList = useCallback((movie: Movie) => {\n    const isInList = movies.every(film => film.imdbId !== movie.imdbId);\n\n    if (isInList) {\n      setMovies(list => [...list, movie]);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onClickAdd={addMovieToList} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}